{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "Vaadin",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "src/vaadin-upload.html",
        "start": {
          "line": 891,
          "column": 6
        },
        "end": {
          "line": 891,
          "column": 50
        }
      },
      "elements": [
        {
          "description": "`<vaadin-upload-file>` element represents a file in the file list of `<vaadin-upload>`.\n\n### Styling\n\nThe following shadow DOM parts are available for styling:\n\nPart name | Description\n---|---\n`row` | File container\n`info` | Container for file status icon, file name, status and error messages\n`done-icon` | File done status icon\n`warning-icon` | File warning status icon\n`meta` | Container for file name, status and error messages\n`name` | File name\n`error` | Error message, shown when error happens\n`status` | Status message\n`commands` | Container for file command icons\n`start-button` | Start file upload button\n`retry-button` | Retry file upload button\n`clear-button` | Clear file button\n`progress`| Progress bar\n\nThe following state attributes are available for styling:\n\nAttribute | Description | Part name\n---|---|---\n`error` | An error has happened during uploading | `progress`\n`indeterminate` | Uploading is in progress, but the progress value is unknown | `progress`\n`uploading` | Uploading is in progress | `progress`\n`complete` | Uploading has finished successfully | `progress`\n\nSee [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)",
          "summary": "",
          "path": "src/vaadin-upload-file.html",
          "properties": [
            {
              "name": "file",
              "type": "Object",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 100,
                  "column": 12
                },
                "end": {
                  "line": 100,
                  "column": 24
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "_fileAborted",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 110,
                  "column": 8
                },
                "end": {
                  "line": 114,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "abort"
                }
              ]
            },
            {
              "name": "_remove",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 116,
                  "column": 8
                },
                "end": {
                  "line": 124,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_formatProgressValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 126,
                  "column": 8
                },
                "end": {
                  "line": 128,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "progress"
                }
              ]
            },
            {
              "name": "_fireFileEvent",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 130,
                  "column": 8
                },
                "end": {
                  "line": 139,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ]
            }
          ],
          "staticMethods": [
            {
              "name": "_includeStyle",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../bower_components/vaadin-themable-mixin/vaadin-themable-mixin.html",
                "start": {
                  "line": 46,
                  "column": 4
                },
                "end": {
                  "line": 50,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "moduleName"
                }
              ],
              "inheritedFrom": "Vaadin.ThemableMixin"
            }
          ],
          "demos": [
            {
              "url": "demo/index.html",
              "description": ""
            }
          ],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.UploadFileElement",
          "attributes": [
            {
              "name": "file",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 100,
                  "column": 12
                },
                "end": {
                  "line": 100,
                  "column": 24
                }
              },
              "metadata": {},
              "type": "Object"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "file-abort",
              "description": "file-abort",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "file-remove",
              "description": "file-remove",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "file-retry",
              "description": "file-retry",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "file-start",
              "description": "file-start",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "vaadin-upload-file",
          "mixins": [
            "Vaadin.ThemableMixin"
          ]
        },
        {
          "description": "`<vaadin-upload>` is a Polymer 2 element for uploading multiple files with drag and drop support.\n\nExample:\n\n```\n<vaadin-upload></vaadin-upload>\n```\n\n### Styling\n\nThe following shadow DOM parts are available for styling:\n\nPart name | Description\n---|---\n`primary-buttons` | Upload container\n`upload-button` | Upload button\n`drop-label` | Label for drop indicator\n`drop-label-icon` | Icon for drop indicator\n`file-list` | File list container\n\nThe following state attributes are available for styling:\n\nAttribute | Description | Part name\n---|---|---\n`nodrop` | Set when drag and drop is disabled (e. g., on touch devices) | `:host`\n`dragover` | A file is being dragged over the element | `:host`\n`dragover-valid` | A dragged file is valid with `maxFiles` and `accept` criteria | `:host`\n\nSee [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)",
          "summary": "",
          "path": "src/vaadin-upload.html",
          "properties": [
            {
              "name": "nodrop",
              "type": "boolean",
              "description": "Define whether the element supports dropping files on it for uploading.\nBy default it's enabled in desktop and disabled in touch devices\nbecause mobile devices do not support drag events in general. Setting\nit false means that drop is enabled even in touch-devices, and true\ndisables drop in all devices.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 117,
                  "column": 12
                },
                "end": {
                  "line": 127,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "target",
              "type": "string",
              "description": "The server URL. The default value is an empty string, which means that\n_window.location_ will be used.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 133,
                  "column": 12
                },
                "end": {
                  "line": 136,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"\""
            },
            {
              "name": "method",
              "type": "string",
              "description": "HTTP Method used to send the files. Only POST and PUT are allowed.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 141,
                  "column": 12
                },
                "end": {
                  "line": 144,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"POST\""
            },
            {
              "name": "headers",
              "type": "Object",
              "description": "Key-Value map to send to the server. If you set this property as an\nattribute, use a valid JSON string, for example:\n```\n<vaadin-upload headers='{\"X-Foo\": \"Bar\"}'></vaadin-upload>\n```",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 153,
                  "column": 12
                },
                "end": {
                  "line": 156,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "{}"
            },
            {
              "name": "timeout",
              "type": "number",
              "description": "Max time in milliseconds for the entire upload process, if exceeded the\nrequest will be aborted. Zero means that there is no timeout.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 163,
                  "column": 12
                },
                "end": {
                  "line": 166,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "0"
            },
            {
              "name": "_dragover",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 168,
                  "column": 12
                },
                "end": {
                  "line": 172,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_dragoverChanged\""
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "files",
              "type": "Array",
              "description": "The array of files being processed, or already uploaded.\n\nEach element is a [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File)\nobject with a number of extra properties  to track the upload process:\n- `uploadTarget`: The target URL used to upload this file.\n- `elapsed`: Elapsed time since the upload started.\n- `elapsedStr`: Human-readable elapsed time.\n- `remaining`: Number of seconds remaining for the upload to finish.\n- `remainingStr`: Human-readable remaining time for the upload to finish.\n- `progress`: Percentage of the file already uploaded.\n- `speed`: Upload speed in kB/s.\n- `size`: File size in bytes.\n- `totalStr`: Human-readable total size of the file.\n- `loaded`: Bytes transferred so far.\n- `loadedStr`: Human-readable uploaded size at the moment.\n- `status`: Status of the upload process.\n- `error`: Error message in case the upload failed.\n- `abort`: True if the file was canceled by the user.\n- `complete`: True when the file was transferred to the server.\n- `uploading`: True while transferring data to the server.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 196,
                  "column": 12
                },
                "end": {
                  "line": 202,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              },
              "defaultValue": "[]"
            },
            {
              "name": "maxFiles",
              "type": "number",
              "description": "Limit of files to upload, by default it is unlimited. If the value is\nset to one, native file browser will prevent selecting multiple files.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 208,
                  "column": 12
                },
                "end": {
                  "line": 211,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "maxFilesReached",
              "type": "boolean",
              "description": "Specifies if the maximum number of files have been uploaded",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 216,
                  "column": 12
                },
                "end": {
                  "line": 222,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "readOnly": true
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "accept",
              "type": "string",
              "description": "Specifies the types of files that the server accepts.\nSyntax: a comma-separated list of MIME type patterns (wildcards are\nallowed) or file extensions.\nNotice that MIME types are widely supported, while file extensions\nare only implemented in certain browsers, so avoid using it.\nExample: accept=\"video/*,image/tiff\" or accept=\".pdf,audio/mp3\"",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 232,
                  "column": 12
                },
                "end": {
                  "line": 235,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"\""
            },
            {
              "name": "maxFileSize",
              "type": "number",
              "description": "Specifies the maximum file size in bytes allowed to upload.\nNotice that it is a client-side constraint, which will be checked before\nsending the request. Obviously you need to do the same validation in\nthe server-side and be sure that they are aligned.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 243,
                  "column": 12
                },
                "end": {
                  "line": 246,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_dragoverValid",
              "type": "boolean",
              "description": "Specifies if the dragover is validated with maxFiles and\naccept properties.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 252,
                  "column": 12
                },
                "end": {
                  "line": 256,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_dragoverValidChanged\""
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "formDataName",
              "type": "string",
              "description": "Specifies the 'name' property at Content-Disposition",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 261,
                  "column": 12
                },
                "end": {
                  "line": 264,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "\"file\""
            },
            {
              "name": "noAuto",
              "type": "boolean",
              "description": "Prevents upload(s) from immediately uploading upon adding file(s).\nWhen set, you must manually trigger uploads using the `uploadFiles` method",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 270,
                  "column": 12
                },
                "end": {
                  "line": 273,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "withCredentials",
              "type": "boolean",
              "description": "Set the withCredentials flag on the request.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 278,
                  "column": 12
                },
                "end": {
                  "line": 281,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "i18n",
              "type": "Object",
              "description": "The object used to localize this component.\nFor changing the default localization, change the entire\n_i18n_ object or just the property you want to modify.\n\nThe object has the following JSON structure and default values:\n\n            {\n              dropFiles: {\n              one: 'Drop file here\n              many: 'Drop files here\n              },\n              addFiles: {\n              one: 'Select File...',\n              many: 'Upload Files...'\n              },\n              cancel: 'Cancel',\n              error: {\n              tooManyFiles: 'Too Many Files.',\n              fileIsTooBig: 'File is Too Big.',\n              incorrectFileType: 'Incorrect File Type.'\n              },\n              uploading: {\n              status: {\n                connecting: 'Connecting...',\n                stalled: 'Stalled.',\n                processing: 'Processing File...',\n                held: 'Queued'\n              },\n              remainingTime: {\n                prefix: 'remaining time: ',\n                unknown: 'unknown remaining time'\n              },\n              error: {\n                serverUnavailable: 'Server Unavailable',\n                unexpectedServerError: 'Unexpected Server Error',\n                forbidden: 'Forbidden'\n              }\n              },\n              units: {\n              size: ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n              },\n              formatSize: function(bytes) {\n              // returns the size followed by the best suitable unit\n              },\n              formatTime: function(seconds, [secs, mins, hours]) {\n              // returns a 'HH:MM:SS' string\n              }\n            }",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 336,
                  "column": 12
                },
                "end": {
                  "line": 376,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 380,
                  "column": 8
                },
                "end": {
                  "line": 389,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_formatSize",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 391,
                  "column": 8
                },
                "end": {
                  "line": 402,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "bytes"
                }
              ]
            },
            {
              "name": "_splitTimeByUnits",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 404,
                  "column": 8
                },
                "end": {
                  "line": 414,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "time"
                }
              ]
            },
            {
              "name": "_formatTime",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 416,
                  "column": 8
                },
                "end": {
                  "line": 432,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "seconds"
                },
                {
                  "name": "split"
                }
              ]
            },
            {
              "name": "_formatFileProgress",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 434,
                  "column": 8
                },
                "end": {
                  "line": 441,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "file"
                }
              ]
            },
            {
              "name": "_maxFilesAdded",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 443,
                  "column": 8
                },
                "end": {
                  "line": 445,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "maxFiles"
                },
                {
                  "name": "numFiles"
                }
              ]
            },
            {
              "name": "_onDragover",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 447,
                  "column": 8
                },
                "end": {
                  "line": 454,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_onDragleave",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 456,
                  "column": 8
                },
                "end": {
                  "line": 461,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_onDrop",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 463,
                  "column": 8
                },
                "end": {
                  "line": 469,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_createXhr",
              "description": "Override for tests",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 472,
                  "column": 8
                },
                "end": {
                  "line": 474,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_configureXhr",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 476,
                  "column": 8
                },
                "end": {
                  "line": 491,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "xhr"
                }
              ]
            },
            {
              "name": "_setStatus",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 493,
                  "column": 8
                },
                "end": {
                  "line": 502,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "file"
                },
                {
                  "name": "total"
                },
                {
                  "name": "loaded"
                },
                {
                  "name": "elapsed"
                }
              ]
            },
            {
              "name": "uploadFiles",
              "description": "Triggers the upload of any files that are not completed",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 509,
                  "column": 8
                },
                "end": {
                  "line": 513,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "files"
                }
              ]
            },
            {
              "name": "_uploadFile",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 515,
                  "column": 8
                },
                "end": {
                  "line": 640,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "file"
                }
              ]
            },
            {
              "name": "_retryFileUpload",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 642,
                  "column": 8
                },
                "end": {
                  "line": 652,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "file"
                }
              ]
            },
            {
              "name": "_abortFileUpload",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 654,
                  "column": 8
                },
                "end": {
                  "line": 668,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "file"
                }
              ]
            },
            {
              "name": "_notifyFileChanges",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 670,
                  "column": 8
                },
                "end": {
                  "line": 677,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "file"
                }
              ]
            },
            {
              "name": "_addFiles",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 679,
                  "column": 8
                },
                "end": {
                  "line": 681,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "files"
                }
              ]
            },
            {
              "name": "_addFile",
              "description": "Add the file for uploading. Called internally for each file after picking files from dialog or dropping files.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 688,
                  "column": 8
                },
                "end": {
                  "line": 723,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "file",
                  "type": "File",
                  "description": "File being added"
                }
              ]
            },
            {
              "name": "_removeFile",
              "description": "Remove file from upload list. Called internally if file upload was canceled.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 729,
                  "column": 8
                },
                "end": {
                  "line": 731,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "file",
                  "type": "File",
                  "description": "File to remove"
                }
              ]
            },
            {
              "name": "_onAddFilesClick",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 733,
                  "column": 8
                },
                "end": {
                  "line": 740,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_onFileInputChange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 742,
                  "column": 8
                },
                "end": {
                  "line": 744,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_onFileStart",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 746,
                  "column": 8
                },
                "end": {
                  "line": 748,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_onFileRetry",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 750,
                  "column": 8
                },
                "end": {
                  "line": 752,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_onFileAbort",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 754,
                  "column": 8
                },
                "end": {
                  "line": 756,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_onFileRemove",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 758,
                  "column": 8
                },
                "end": {
                  "line": 761,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_dragoverChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 763,
                  "column": 8
                },
                "end": {
                  "line": 765,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "dragover"
                }
              ]
            },
            {
              "name": "_dragoverValidChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 767,
                  "column": 8
                },
                "end": {
                  "line": 769,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "dragoverValid"
                }
              ]
            },
            {
              "name": "_i18nPlural",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 771,
                  "column": 8
                },
                "end": {
                  "line": 773,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "plural"
                }
              ]
            },
            {
              "name": "_isMultiple",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 775,
                  "column": 8
                },
                "end": {
                  "line": 777,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            }
          ],
          "staticMethods": [
            {
              "name": "_includeStyle",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../bower_components/vaadin-themable-mixin/vaadin-themable-mixin.html",
                "start": {
                  "line": 46,
                  "column": 4
                },
                "end": {
                  "line": 50,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "moduleName"
                }
              ],
              "inheritedFrom": "Vaadin.ThemableMixin"
            }
          ],
          "demos": [
            {
              "url": "demo/index.html",
              "description": ""
            }
          ],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 6
            },
            "end": {
              "line": 884,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.UploadElement",
          "attributes": [
            {
              "name": "nodrop",
              "description": "Define whether the element supports dropping files on it for uploading.\nBy default it's enabled in desktop and disabled in touch devices\nbecause mobile devices do not support drag events in general. Setting\nit false means that drop is enabled even in touch-devices, and true\ndisables drop in all devices.",
              "sourceRange": {
                "start": {
                  "line": 117,
                  "column": 12
                },
                "end": {
                  "line": 127,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "target",
              "description": "The server URL. The default value is an empty string, which means that\n_window.location_ will be used.",
              "sourceRange": {
                "start": {
                  "line": 133,
                  "column": 12
                },
                "end": {
                  "line": 136,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "method",
              "description": "HTTP Method used to send the files. Only POST and PUT are allowed.",
              "sourceRange": {
                "start": {
                  "line": 141,
                  "column": 12
                },
                "end": {
                  "line": 144,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "headers",
              "description": "Key-Value map to send to the server. If you set this property as an\nattribute, use a valid JSON string, for example:\n```\n<vaadin-upload headers='{\"X-Foo\": \"Bar\"}'></vaadin-upload>\n```",
              "sourceRange": {
                "start": {
                  "line": 153,
                  "column": 12
                },
                "end": {
                  "line": 156,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Object"
            },
            {
              "name": "timeout",
              "description": "Max time in milliseconds for the entire upload process, if exceeded the\nrequest will be aborted. Zero means that there is no timeout.",
              "sourceRange": {
                "start": {
                  "line": 163,
                  "column": 12
                },
                "end": {
                  "line": 166,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number"
            },
            {
              "name": "files",
              "description": "The array of files being processed, or already uploaded.\n\nEach element is a [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File)\nobject with a number of extra properties  to track the upload process:\n- `uploadTarget`: The target URL used to upload this file.\n- `elapsed`: Elapsed time since the upload started.\n- `elapsedStr`: Human-readable elapsed time.\n- `remaining`: Number of seconds remaining for the upload to finish.\n- `remainingStr`: Human-readable remaining time for the upload to finish.\n- `progress`: Percentage of the file already uploaded.\n- `speed`: Upload speed in kB/s.\n- `size`: File size in bytes.\n- `totalStr`: Human-readable total size of the file.\n- `loaded`: Bytes transferred so far.\n- `loadedStr`: Human-readable uploaded size at the moment.\n- `status`: Status of the upload process.\n- `error`: Error message in case the upload failed.\n- `abort`: True if the file was canceled by the user.\n- `complete`: True when the file was transferred to the server.\n- `uploading`: True while transferring data to the server.",
              "sourceRange": {
                "start": {
                  "line": 196,
                  "column": 12
                },
                "end": {
                  "line": 202,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Array"
            },
            {
              "name": "max-files",
              "description": "Limit of files to upload, by default it is unlimited. If the value is\nset to one, native file browser will prevent selecting multiple files.",
              "sourceRange": {
                "start": {
                  "line": 208,
                  "column": 12
                },
                "end": {
                  "line": 211,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number"
            },
            {
              "name": "max-files-reached",
              "description": "Specifies if the maximum number of files have been uploaded",
              "sourceRange": {
                "start": {
                  "line": 216,
                  "column": 12
                },
                "end": {
                  "line": 222,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "accept",
              "description": "Specifies the types of files that the server accepts.\nSyntax: a comma-separated list of MIME type patterns (wildcards are\nallowed) or file extensions.\nNotice that MIME types are widely supported, while file extensions\nare only implemented in certain browsers, so avoid using it.\nExample: accept=\"video/*,image/tiff\" or accept=\".pdf,audio/mp3\"",
              "sourceRange": {
                "start": {
                  "line": 232,
                  "column": 12
                },
                "end": {
                  "line": 235,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "max-file-size",
              "description": "Specifies the maximum file size in bytes allowed to upload.\nNotice that it is a client-side constraint, which will be checked before\nsending the request. Obviously you need to do the same validation in\nthe server-side and be sure that they are aligned.",
              "sourceRange": {
                "start": {
                  "line": 243,
                  "column": 12
                },
                "end": {
                  "line": 246,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number"
            },
            {
              "name": "form-data-name",
              "description": "Specifies the 'name' property at Content-Disposition",
              "sourceRange": {
                "start": {
                  "line": 261,
                  "column": 12
                },
                "end": {
                  "line": 264,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            },
            {
              "name": "no-auto",
              "description": "Prevents upload(s) from immediately uploading upon adding file(s).\nWhen set, you must manually trigger uploads using the `uploadFiles` method",
              "sourceRange": {
                "start": {
                  "line": 270,
                  "column": 12
                },
                "end": {
                  "line": 273,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "with-credentials",
              "description": "Set the withCredentials flag on the request.",
              "sourceRange": {
                "start": {
                  "line": 278,
                  "column": 12
                },
                "end": {
                  "line": 281,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "i18n",
              "description": "The object used to localize this component.\nFor changing the default localization, change the entire\n_i18n_ object or just the property you want to modify.\n\nThe object has the following JSON structure and default values:\n\n            {\n              dropFiles: {\n              one: 'Drop file here\n              many: 'Drop files here\n              },\n              addFiles: {\n              one: 'Select File...',\n              many: 'Upload Files...'\n              },\n              cancel: 'Cancel',\n              error: {\n              tooManyFiles: 'Too Many Files.',\n              fileIsTooBig: 'File is Too Big.',\n              incorrectFileType: 'Incorrect File Type.'\n              },\n              uploading: {\n              status: {\n                connecting: 'Connecting...',\n                stalled: 'Stalled.',\n                processing: 'Processing File...',\n                held: 'Queued'\n              },\n              remainingTime: {\n                prefix: 'remaining time: ',\n                unknown: 'unknown remaining time'\n              },\n              error: {\n                serverUnavailable: 'Server Unavailable',\n                unexpectedServerError: 'Unexpected Server Error',\n                forbidden: 'Forbidden'\n              }\n              },\n              units: {\n              size: ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n              },\n              formatSize: function(bytes) {\n              // returns the size followed by the best suitable unit\n              },\n              formatTime: function(seconds, [secs, mins, hours]) {\n              // returns a 'HH:MM:SS' string\n              }\n            }",
              "sourceRange": {
                "start": {
                  "line": 336,
                  "column": 12
                },
                "end": {
                  "line": 376,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Object"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "file-reject",
              "description": "file-reject",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "upload-abort",
              "description": "upload-abort",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "upload-before",
              "description": "upload-before",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "upload-error",
              "description": "upload-error",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "upload-progress",
              "description": "upload-progress",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "upload-request",
              "description": "upload-request",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "upload-response",
              "description": "upload-response",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "upload-retry",
              "description": "upload-retry",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "upload-start",
              "description": "upload-start",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "upload-success",
              "description": "upload-success",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "files-changed",
              "description": "Fired when the `files` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "max-files-reached-changed",
              "description": "Fired when the `maxFilesReached` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [
            {
              "description": "",
              "name": "add-button",
              "range": {
                "file": "src/vaadin-upload.html",
                "start": {
                  "line": 33,
                  "column": 8
                },
                "end": {
                  "line": 37,
                  "column": 15
                }
              }
            },
            {
              "description": "",
              "name": "drop-label-icon",
              "range": {
                "file": "src/vaadin-upload.html",
                "start": {
                  "line": 40,
                  "column": 8
                },
                "end": {
                  "line": 42,
                  "column": 15
                }
              }
            },
            {
              "description": "",
              "name": "drop-label",
              "range": {
                "file": "src/vaadin-upload.html",
                "start": {
                  "line": 43,
                  "column": 8
                },
                "end": {
                  "line": 45,
                  "column": 15
                }
              }
            },
            {
              "description": "",
              "name": "file-list",
              "range": {
                "file": "src/vaadin-upload.html",
                "start": {
                  "line": 48,
                  "column": 4
                },
                "end": {
                  "line": 54,
                  "column": 11
                }
              }
            },
            {
              "description": "",
              "name": "",
              "range": {
                "file": "src/vaadin-upload.html",
                "start": {
                  "line": 55,
                  "column": 4
                },
                "end": {
                  "line": 55,
                  "column": 17
                }
              }
            }
          ],
          "tagname": "vaadin-upload",
          "mixins": [
            "Vaadin.ThemableMixin"
          ]
        }
      ]
    }
  ]
}
